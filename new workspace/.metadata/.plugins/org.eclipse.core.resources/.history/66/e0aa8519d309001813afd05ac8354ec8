package com.mindtree.omsProject.dao.DaoImpl;

import java.util.ArrayList;
import java.util.List;



import org.hibernate.HibernateException;
import org.hibernate.SessionFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.mindtree.omsProject.dao.CampusMindDao;
import com.mindtree.omsProject.entity.CampusMind;

@Repository
@Transactional
public class CampusMindDaoImpl implements CampusMindDao {
	
	@Autowired
	private SessionFactory sessionFactory;
	
	public Session getSession() {
		return this.sessionFactory.getCurrentSession();
	}
	
	public boolean addcampusmind(CampusMind campusMind) {
	System.out.println("DAO");
		try{
			sessionFactory.openSession().saveOrUpdate(campusMind);
			System.out.println("done");
			return true;
		}catch(HibernateException e){
			//sessionFactory.openSession().saveOrUpdate(campusMind);
			System.out.println("exception");
			return false ;
		}
	}

	public List<CampusMind> getcampusmind() {
	
		List<CampusMind> campusminds = new ArrayList<CampusMind>() ;
		try{
				campusminds = sessionFactory.getCurrentSession().createQuery("from CampusMind").list() ;
				return campusminds ;
			}catch(HibernateException e){
				campusminds = sessionFactory.openSession().createQuery("from CampusMind").list() ;
				return campusminds ;
			}
	}

	public void deleteCampusMind(int mid) {
		
		CampusMind campusMind = getSession().load(CampusMind.class, new Integer(mid));
		if(null!=song) {
			getSession().delete(song);
			logger.info("Song is deleted successfully");
		} else {
			logger.info("Unable to delete the song");
		}
		
		
	}

	public CampusMind updateCampusMind(CampusMind campusMind) {
Song song1 = null;
		
		if(null!=song) {
			System.out.println("song is fetched");
			getSession().update(song);
//			getSession().saveOrUpdate(song);
		} else{
			System.out.println("Wrong id of song");
		}
		song1 = getSession().load(Song.class, new Integer(song.getId()));
		return song1;

}
